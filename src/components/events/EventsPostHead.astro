---
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import { Icon } from "astro-icon/components";
import Badge from '@/components/Badge.astro';
import Separator from "@/components/Separator.astro";
import { getEntryDate } from "@/utils/date";


interface Props {
	content: CollectionEntry<"events">;
}

const {
	content,
} = Astro.props;

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};

const entryDate = getEntryDate(content); // This safely extracts the date

---

<div class="md:top-8 flex items-start mt-4 w-full">

	<div class="flex h-8 w-8 items-center flex-shrink-0 bg-accent-base/10 justify-center rounded-lg text-accent-base">	
		<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="ri:team-fill" />
	</div>

	<h1 
		class="title ml-2 md:top-4 line-clamp-none"
		title={content.data.name}
		data-pagefind-body
	>
		{content.data.name}
	</h1>
</div>

<div class="flex flex-wrap items-center text-lighter text-sm mt-[1.0625rem] mx-2 mb-1">
	<span class="flex items-center h-[1.75rem]">
		<Icon aria-hidden="true" class="flex items-center h-4 w-4 me-1" focusable="false" name="hugeicons:calendar-03" />
		<FormattedDate date={content.data.date} class="flex flex-shrink-0" />
		<!-- {entryDate && <FormattedDate date={entryDate} />} -->
	</span>
</div>


{/* Tags */}
{
    content.data.tags?.length > 0 && (<div class="mt-2 flex flex-wrap items-center gap-2 mx-1">
        <Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-accent-base" focusable="false" name="solar:tag-line-duotone" />	
        <>
            {content.data.tags.map((tag) => (
                <a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`}>
                    <Badge variant="accent-two" title={tag} />
                </a>
            ))}
        </></div>
    )
}
