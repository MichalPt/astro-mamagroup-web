---
import { Image } from "astro:assets";
import { type CollectionEntry, getCollection } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import { Icon } from "astro-icon/components";
import Badge from '@/components/Badge.astro';
import Separator from "@/components/Separator.astro";
import { getEntryDate } from "@/utils/date.ts";

interface Props {
	content: CollectionEntry<"news">;
}

const {
	content,
} = Astro.props;

const dateTimeOptions: Intl.DateTimeFormatOptions = {
	month: "long",
};

const entryDate = getEntryDate(content); // This safely extracts the date
---

<div class="md:top-8 flex items-end mt-4">
	<div class="flex h-8 w-8 items-center flex-shrink-0 bg-accent-base/10 justify-center rounded-lg text-accent-base">	
		<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="solar:clipboard-list-bold" />
	</div>

	<h1 
		class="title ml-2 md:sticky md:top-4 line-clamp-none md:line-clamp-1 md:max-w-[calc(100%-10rem)]"
		title={content.data.title}
		data-pagefind-body
	>
		{content.data.title}
	</h1>
</div>

<div class="flex flex-wrap items-center text-lighter text-sm mt-[1.0625rem] mx-2 mb-2">
	<span class="flex items-center h-[1.75rem]">
		<Icon aria-hidden="true" class="flex items-center h-4 w-4 me-1" focusable="false" name="hugeicons:calendar-03" />
		<!-- <FormattedDate date={content.data.date} dateTimeOptions={dateTimeOptions} class="flex flex-shrink-0" /> -->
		{entryDate && <FormattedDate date={entryDate} />}
	</span>
	<!-- <Separator type="dot" />
	<span class="flex items-center h-[1.75rem]">
		<Icon aria-hidden="true" class="flex items-center inline-block h-4 w-4 me-1" focusable="false" name="hugeicons:book-open-01" />
		{/* @ts-ignore:next-line. TODO: add reading time to collection schema? */}
		{content.rendered?.metadata?.frontmatter?.readingTime ? `${content.rendered.metadata.frontmatter.readingTime}` : "Less than one minute read"}
	</span> -->
	{
		content.data.updatedDate && (
			<Separator type="dot" />
			<span class="h-[1.75rem] flex items-center flex-shrink-0 rounded-lg bg-accent-two/5 text-accent-two py-1 px-2 text-sm gap-x-1">
				{/* Updated:<FormattedDate class="flex flex-shrink-0" date={content.data.updatedDate} dateTimeOptions={dateTimeOptions} /> */}
				{entryDate && (
					<>
						Updated: <FormattedDate date={entryDate} />
					</>
				)}
			</span>
		)
	}
</div>

<!-- {
	content.data.image && (
		<div class="mb-4 mt-2 overflow-auto rounded-lg">
			<Image
				alt="image" //{content.data.image.alt}
				class="object-cover"
				fetchpriority="high"
				loading="lazy" // loading="eager"
				src={content.data.image}
                height="100"
                width="100"
			/>
		</div>
	)
} -->

<p 
	class="prose max-w-none text-textColor mx-2"
	data-pagefind-body
>
	{content.data.teaser}
</p>

<div class="mt-4 flex flex-wrap items-center gap-2 mx-1">
	{/* Tags */}
	{
		content.data.tags?.length ? (
			<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-accent-base" focusable="false" name="solar:tag-line-duotone" />	
			<>
				{content.data.tags.map((tag) => (
					<a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`}>
						<Badge variant="accent-two" title={tag} />
					</a>
				))}
			</>
		) : (
			<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-lightest" focusable="false" name="solar:tag-line-duotone" />
			<span class="text-sm text-lightest">No tags</span>
		)
	}

	<!-- {/* Series */}
	{
		postSeries ? (
			<div class="flex items-center gap-2">
				<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-accent-base" focusable="false" name="solar:notes-line-duotone" />
				<a 
					aria-label={`About ${postSeries.data.title} series`} 
					href={`/series/${postSeries.id}`}
					class="flex items-center gap-2 flex-wrap"
				>
					<Badge variant="accent-base" showHash={false} title={postSeries.data.title} />
				</a>
			</div>	
		) : (
			<div class="flex items-center gap-2">
				<Icon aria-hidden="true" class="flex-shrink-0 inline-block h-6 w-6 text-lightest" focusable="false" name="solar:notes-line-duotone" />
				<span class="text-sm text-lightest">Not in series</span>
			</div>
		)
	} -->
</div>