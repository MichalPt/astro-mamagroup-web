---
import Search from "@/components/Search.astro";
import ThemeToggle from "@/components/ThemeToggle.astro";
import { siteConfig, menuLinks } from "@/site.config";
import { Icon } from "astro-icon/components";
import { Image } from 'astro:assets';

export interface SubNavigationLink {
	title: string;
	path: string;
}

export interface NavigationLink {
	title: string;
	path: string;
	showsub?: boolean;
	subfolder?: SubNavigationLink[];
}
---

<style>
	.group:hover .group-hover:block {
		display: block;
	}
	.active .group-hover:block {
		display: block;
	}
</style>

<header
	id="main-header"
	class="fixed md:relative px-4 top-0 md:top-4 h-[80px] z-20 w-full left-0 bg-bgColor md:bg-transparent"
>	
	<!-- Background for mobile only -->
	<div class="md:hidden absolute top-0 left-1/2 -ml-[50vw] w-screen min-h-screen pointer-events-none blur-2xl">
		<div class="absolute top-[-90%] right-[25%] w-[75%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
		<div class="absolute top-[-90%] left-[25%] w-[75%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
		<div class="absolute top-[-85%] right-[25%] w-[55%] h-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
		<div class="absolute top-[-85%] left-[25%] w-[55%] h-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
		<div class="absolute top-[-75%] left-[-25%] w-[65%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-30 dark:opacity-5"></div>
		<div class="absolute top-[-75%] right-[-25%] w-[65%] h-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent rounded-full opacity-30 dark:opacity-5"></div>
		<div class="absolute top-[-85%] left-[-30%] w-[85%] h-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent rounded-full opacity-60 dark:opacity-5"></div>
		<div class="absolute top-[-85%] right-[-30%] w-[85%] h-full bg-gradient-to-b from-orange-300 via-indigo-300 to-transparent rounded-full opacity-60 dark:opacity-5"></div>
	</div>
	
	<!-- Main header container with consistent width -->
	<div class="w-full max-w-6xl mx-auto flex items-center justify-between h-full">
		<!-- Logo section -->
		<div class="flex items-center shrink-0">
			<a
				aria-label={siteConfig.title}
				aria-current={Astro.url.pathname === "/" ? "page" : false}
				class="group flex h-8 items-center hover:filter-none"
				href="/"
			>	
				<div class="items-center justify-center flex">
					<!-- <Image src="/logo-mama-group.png" alt="Logo" height="80" width="80" class="dark:imginv"/> -->
					<Image src="/mama-logo-2.svg" alt="Logo" height="80" width="80" class="dark:imginv"/>
				</div>
			</a>
		</div>

		<!-- Navigation section -->
		<nav
			aria-label="Main menu"
			class="hidden md:flex items-center gap-x-8 lg:gap-x-10 xl:gap-x-16 md:mx-4"
			id="main-navigation-menu"
		>
			{
				menuLinks.map((menu) => (
				<>
					{menu.showsub ? (
					<div class="nav-item group relative cursor-pointer flex md:shrink">
						<span class="nav-link inline-flex items-center shrink">
							<a href={menu.path} class="underline-offset-2 hover:underline text-base/4 text-center shrink">{menu.title}</a>
							<svg class="h-5 w-5 fill-current" viewBox="0 0 20 20">
								<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
							</svg>
						</span>
						<ul class="nav-dropdown-list hidden group-hover:block md:invisible md:absolute md:block md:opacity-0 md:group-hover:visible md:group-hover:opacity-100 left-1/2 -translate-x-1/2">
						{menu.subfolder?.map((child) => (
							<li class="nav-dropdown-item">
							<a href={menu.path+child.path} class="underline-offset-2 hover:underline text-base">
								{child.title}
							</a>
							</li>
						))}
						</ul>
					</div>
					) : (
					<div class="nav-item flex grow">
						<a href={menu.path} class="underline-offset-2 hover:underline text-base/4 text-center">
						{menu.title}
						</a>
					</div>
					)}
				</>
				))
			}
		</nav>

		<!-- Buttons section -->
		<div class="flex items-center gap-x-2 flex-shrink-0">
			<div id="buttons-panel" class="flex space-x-2">
				<Search />
				<ThemeToggle />
			</div>
			
			<mobile-button
				aria-expanded="false"
				aria-haspopup="menu"
				aria-label="Open main menu"
				class="group relative h-8 w-8 rounded-lg bg-color-100 hover:bg-accent-base/10 text-accent-base md:hidden"
				id="toggle-nav-menu-mobile"
				type="button"
			>
				<Icon
					id="open-nav-menu-icon"
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-6 w-6 -translate-x-1/2 -translate-y-1/2 scale-100 opacity-100 transition-all"
					focusable="false"
					name="hugeicons:menu-01"
				/>
				<Icon
					id="close-nav-menu-icon"
					aria-hidden="true"
					class="absolute start-1/2 top-1/2 h-6 w-6 -translate-x-1/2 -translate-y-1/2 scale-0 opacity-0 transition-all"
					focusable="false"
					name="hugeicons:cancel-01"
				/>
			</mobile-button>
		</div>
	</div>
</header>

<div id="drawer" class="fixed inset-0 z-10 hidden">
	<div
		id="drawer-body"
		class="absolute inset-0 -translate-y-full transform bg-bgColor transition-all duration-300 ease-in-out"
	>	
		<div class="fixed top-0 left-1/2 -ml-[50vw] w-screen pointer-events-none min-h-screen overflow-x-hidden overflow-y-visible blur-2xl">
				<!--
				<div class="fixed blur-xl top-0 left-0 w-full h-16 md:h-20 bg-gradient-to-b from-indigo-300 via-purple-300 to-transparent opacity-10 dark:opacity-5"></div>
				-->
				<div class="absolute top-[-90%] right-[25%] w-[75%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
				<div class="absolute top-[-90%] left-[25%] w-[75%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
				<div class="absolute top-[-85%] right-[25%] w-[55%] h-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
				<div class="absolute top-[-85%] left-[25%] w-[55%] h-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent rounded-full opacity-40 dark:opacity-5"></div>
				<div class="absolute top-[-75%] left-[-25%] w-[65%] h-full bg-gradient-to-b from-blue-300 via-pink-300 to-transparent rounded-full opacity-30 dark:opacity-5"></div>
				<div class="absolute top-[-75%] right-[-25%] w-[65%] h-full bg-gradient-to-b from-purple-300 via-blue-300 to-transparent rounded-full opacity-30 dark:opacity-5"></div>
				<div class="absolute top-[-85%] left-[-30%] w-[85%] h-full bg-gradient-to-b from-indigo-300 via-orange-300 to-transparent rounded-full opacity-60 dark:opacity-5"></div>
				<div class="absolute top-[-85%] right-[-30%] w-[85%] h-full bg-gradient-to-b from-orange-300 via-indigo-300 to-transparent rounded-full opacity-60 dark:opacity-5"></div>
		
		</div>	
		
		<nav
			aria-label="Mobile navigation menu"
			class="text-lg absolute inset-0 flex flex-col items-center justify-center gap-y-4 text-center font-medium text-accent-two"
			id="nav-menu-mobile"
		>
			<!-- {
				menuLinks.map((link) => (
					<a
						aria-current={Astro.url.pathname === link.path ? "page" : false}
						class="underline-offset-2 hover:underline"
						data-astro-prefetch
						href={link.path}
					>
						{link.title}
					</a>
				))
			} -->
			{
				menuLinks.map((menu) => (
				<>
					{menu.showsub ? (
					<div class="nav-item group relative cursor-pointer">
						<span class="nav-link inline-flex items-center">
							<a href={menu.path} class="underline-offset-2 hover:underline text-base" data-astro-prefetch>{menu.title}</a>
							<button type="button" class="button-expand-menu-list">
								<svg class="h-5 w-5 fill-current" viewBox="0 0 20 20">
									<path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
								</svg>
							</button>
						</span>
						{/* <ul class="nav-dropdown-list-mobile hidden group-hover:block md:invisible md:absolute md:block md:opacity-0 md:group-hover:visible md:group-hover:opacity-100"> */}
						<ul class="nav-dropdown-list-mobile hidden md:invisible md:absolute md:block md:opacity-0">
						{menu.subfolder?.map((child) => (
							<li class="nav-dropdown-item">
							<a href={menu.path+child.path} class="underline-offset-2 hover:underline text-base" data-astro-prefetch>
								{child.title}
							</a>
							</li>
						))}
						</ul>
					</div>
					) : (
					<div class="nav-item">
						<a href={menu.path} class="underline-offset-2 hover:underline text-base">
						{menu.title}
						</a>
					</div>
					)}
				</>
				))
			}
			<!-- <a
				class="flex h-8 items-center rounded-lg bg-accent-base/5 px-4 text-accent-base underline-offset-2 hover:bg-accent-base/10"
				data-astro-prefetch
				href="/series/citrus-docs"
			>
				Docs
			</a> -->
		</nav>
	</div>
</div>

<script>
    function initMobileMenu() {
        const toggleNavMenuMobileButton = document.getElementById("toggle-nav-menu-mobile");
        const openMenuIcon = document.getElementById("open-nav-menu-icon");
        const closeMenuIcon = document.getElementById("close-nav-menu-icon");
        const drawer = document.getElementById("drawer");
        const drawerBody = document.getElementById("drawer-body");

        if (!toggleNavMenuMobileButton || !openMenuIcon || !closeMenuIcon || !drawer || !drawerBody) {
            console.error("One or more required elements are missing in the DOM.");
            return;
        }

        // Remove existing listeners to prevent duplicates
        toggleNavMenuMobileButton.replaceWith(toggleNavMenuMobileButton.cloneNode(true));
        const newToggleButton = document.getElementById("toggle-nav-menu-mobile");

        newToggleButton.addEventListener("click", () => {
            const isOpen = newToggleButton.getAttribute("aria-expanded") === "true";

            if (isOpen) {
                drawerBody.classList.add("opacity-0", "-translate-y-full");
                drawerBody.classList.remove("translate-y-0");

                setTimeout(() => {
                    drawer.classList.add("hidden");
                }, 300);

                openMenuIcon.classList.add("scale-100", "opacity-100");
                closeMenuIcon.classList.add("scale-0", "opacity-0");
                closeMenuIcon.classList.remove("scale-100", "opacity-100");
            } else {
                drawer.classList.remove("hidden");
                drawerBody.classList.add("translate-y-0");
                drawerBody.classList.remove("opacity-0", "-translate-y-full");

                openMenuIcon.classList.add("scale-0", "opacity-0");
                closeMenuIcon.classList.add("scale-100", "opacity-100");
                openMenuIcon.classList.remove("scale-100", "opacity-100");
            }

            newToggleButton.setAttribute("aria-expanded", (!isOpen).toString());
        });

        const navLinks = drawerBody.querySelectorAll('a');
        navLinks.forEach(link => {
            link.addEventListener('click', () => {
                drawerBody.classList.add("opacity-0", "-translate-y-full");
                drawerBody.classList.remove("translate-y-0");

                setTimeout(() => {
                    drawer.classList.add("hidden");
                }, 300);

                openMenuIcon.classList.add("scale-100", "opacity-100");
                closeMenuIcon.classList.add("scale-0", "opacity-0");
                closeMenuIcon.classList.remove("scale-100", "opacity-100");

                newToggleButton.setAttribute("aria-expanded", "false");
            });
        });
    }

    function initDropdownButtons() {
        const buttons = Array.from(document.getElementsByClassName('button-expand-menu-list'));

        buttons.forEach(button => {
            // Remove existing listeners
            button.replaceWith(button.cloneNode(true));
        });

        // Re-select buttons after replacement
        const newButtons = Array.from(document.getElementsByClassName('button-expand-menu-list'));
        
        newButtons.forEach(button => {
            button.addEventListener('click', function() {
                const dropdownMenu = this.parentElement.parentElement.getElementsByTagName('ul')[0];
                dropdownMenu.classList.toggle('active');

                if (dropdownMenu.style.display === "block") {
                    dropdownMenu.style.display = "none";
                } else {
                    dropdownMenu.style.display = "block";
                }
            });
        });
    }

    // Initialize on page load
    document.addEventListener("DOMContentLoaded", () => {
        initMobileMenu();
        initDropdownButtons();
    });

    // Re-initialize after navigation (for Astro's client-side routing)
    document.addEventListener("astro:after-swap", () => {
        initMobileMenu();
        initDropdownButtons();
    });

    // Fallback for other routing systems
    document.addEventListener("astro:page-load", () => {
        initMobileMenu();
        initDropdownButtons();
    });
</script>









