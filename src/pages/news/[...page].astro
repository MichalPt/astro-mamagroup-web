---
import type { CollectionEntry } from "astro:content";
import Pagination from "@/components/Paginator.astro";
import NewsPreview from "@/components/news/NewsPreview.astro";
import { getAllNews, getUniqueTags, groupPostsByYear } from "@/data/post";
import PageLayout from "@/layouts/Base.astro";
import { collectionDateSort } from "@/utils/date";
import type { GetStaticPaths, Page } from "astro";
import { Icon } from "astro-icon/components";
import Badge from "@/components/Badge.astro";
import NewsPreviewList from "@/components/news/NewsPreviewList.astro";

export const getStaticPaths = (async ({ paginate }) => {
	const MAX_POSTS_PER_PAGE = 5;
	const MAX_TAGS = 10;
	const allNews = await getAllNews();
	const uniqueTags = getUniqueTags(allNews).slice(0, MAX_TAGS);
	return paginate(allNews.sort(collectionDateSort), {
		pageSize: MAX_POSTS_PER_PAGE,
		props: { uniqueTags },
	});
}) satisfies GetStaticPaths;

interface Props {
	page: Page<CollectionEntry<"news">>;
	uniqueTags: string[];
}

const { page, uniqueTags } = Astro.props;

const meta = {
	description: "What's up in our group?",
	title: "News",
};

const paginationProps = {
	...(page.url.prev && {
		prevUrl: {
			text: "← Previous Page",
			url: page.url.prev,
		},
	}),
	...(page.url.next && {
		nextUrl: {
			text: "Next Page →",
			url: page.url.next,
		},
	}),
};

const groupedByYear = groupPostsByYear(page.data);
const descYearKeys = Object.keys(groupedByYear).sort((a, b) => +b - +a);
---

<PageLayout meta={meta}>
	<div class="flex flex-col items-center md:items-start">
		<h1 class="title mb-6 mt-4 flex items-center gap-2">
			News
			<a class="text-accent-two" href="/news/rss.xml" target="_blank" title="RSS feed">
				<span class="sr-only">RSS feed</span>
				<Icon aria-hidden="true" class="h-6 w-6" focusable="false" name="mdi:rss" />
			</a>
		</h1>
		<div class="flex flex-col md:flex-row gap-y-8 grow min-w-[60vw] max-w-6xl mx-auto justify-between">
			<section aria-label="Blog post list" class="grow">
				{
					descYearKeys.map((yearKey) => (
						<>
							<h4 class="title text-light text-center md:text-left">{yearKey}</h4>
							<ul class="mb-6 mt-2 space-y-6 text-start items-center md:items-start">
								{groupedByYear[yearKey]?.map((p) => (
									<li class="flex flex-col items-center md:items-start">
										<NewsPreviewList post={p} withDesc={true} />
									</li>
								))}
							</ul>
						</>
					))
				}
			</section>
			{
				!!uniqueTags.length && (
					<div class="md:min-w-[14rem] md:max-w-[14rem] md:basis-[14rem]">
						<h4 class="title mb-4 flex gap-2">
							Tags
							{/*
							<Icon aria-hidden="true" class="mb-1 h-6 w-6" focusable="false" name="hugeicons:tags" />
							*/}
						</h4>
						<ul class="flex flex-wrap gap-2">
							{uniqueTags.map((tag) => (
								<li>
									<a aria-label={`View all posts with the tag: ${tag}`} href={`/tags/${tag}`}>
										<Badge variant="muted" title={tag} />
									</a>
								</li>
							))}

							<span class="text-base ms-auto inline-flex items-center h-6 sm:text-end">
								<a
									aria-label="View all blog categories"
									class="font-medium text-accent sm:hover:text-accent-two"
									href="/tags/"
								>
									View all →
								</a>
							</span>	
						</ul>
						{/*
						<span class="mt-4 block sm:text-end">
							<a
								aria-label="View all blog categories"
								class="font-medium text-accent sm:hover:text-accent-two"
								href="/tags/"
							>
								View all →
							</a>
						</span>
						*/}
					</div>
				)
			}
		</div>
		<Pagination {...paginationProps} />
	</div>
</PageLayout>
