---
import { getCollection } from "astro:content";
import CoursesLayout from "@/layouts/Courses.astro";
import type { CollectionEntry } from "astro:content";
import { slugify, processCourseId } from "@/utils/strings.ts"

const collectionName = "coursesMancal";
const rootPath = "/mancal/teaching/";
const contentFolder = "/content/mancal-teaching/";

export async function getStaticPaths() {
    // The getCollection function accepts only literal string, not a vriable!
    const courses = await getCollection("coursesMancal");
    return courses.flatMap((course) =>
        course.data.content.flatMap((section) =>
            section.sectionContent.flatMap((subsection) =>
                subsection.subsectionContent.map((video, idx, arr) => ({
                    params: {
                        course: processCourseId(course.id),
                        page: slugify(video.title),
                    },
                    props: {
                        course,
                        section,
                        subsection,
                        video,
                        videoIndex: idx,
                        videos: arr,
                    },
                }))
            )
        )
    );
}

const { course, section, subsection, video, videoIndex, videos } = Astro.props;
const courseId = processCourseId(course.id);

// Pagination logic for previous/next video in the same subsection
const prevVideo = videoIndex > 0 ? videos[videoIndex - 1] : null;
const nextVideo = videoIndex < videos.length - 1 ? videos[videoIndex + 1] : null;

const prevUrl = prevVideo
    ? `${rootPath}${courseId}/${slugify(prevVideo.title)}`
    : null;
const nextUrl = nextVideo
    ? `${rootPath}${courseId}/${slugify(nextVideo.title)}`
    : null;

const meta = {
    title: video.title,
    description: video.description || "",
};

const videoId = video.videoUrl.split("watch?v=")[1];
---

<CoursesLayout meta={meta} collectionName={collectionName}>
    <span class="flex flex-wrap text-xs leading-tight gap-x-1">
        <a href={rootPath.split('/').slice(1,2).toString()} class="text-light">
            Tomáš Mančal
        </a> / 
        <a href={rootPath} class="text-light">
            Teaching
        </a> / 
        <a href=`${rootPath}${courseId}` class="text-light">
            {course.data.courseName}
        </a> /
        <a href=`${rootPath}${courseId}/#section:${slugify(section.sectionTitle)}` class="text-light">
            {section.sectionTitle}
        </a> /
        <a href=`${rootPath}${courseId}/#section:${slugify(section.sectionTitle)}#subsection:${slugify(subsection.subsectionTitle)}` class="text-light">
            {subsection.subsectionTitle}
        </a> /
    </span>

    <h2 class="title text-base sm:text-2xl mb-1 mt-1">{videoIndex+1} - {video.title}</h2>

    {video.description && <p class="mb-1">{video.description}</p>}

    {video.pdfName && <p class="mb-2">
        <a href={`${contentFolder}${courseId}/files/${video.pdfName}`} target="_blank" class="text-light hover:text-accent-base">
            <span class="text-sm sm:text-base">Attachment: </span>
            <span class="text-xs sm:text-sm">{video.pdfName}</span>
        </a>
    </p>}

    <div class="flex justify-center mt-6 mb-4">
        <iframe src={`https://www.youtube.com/embed/${videoId}`} title="YouTube video player" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
    </div>

    <nav class="flex flex-row mt-4">
        {prevUrl && 
            <a href={prevUrl} class="flex flex-col items-right">
                <div  class="text-sm sm:text-base">← Previous Video</div>
                <div class="text-xs sm:text-sm text-light">
                    <div>{prevVideo.title}</div>
                    <div>({videoIndex} of {videos.length})</div>
                </div>
            </a>
        }
        <div class="mx-auto"></div>
        {nextUrl && 
            <a href={nextUrl} class="flex flex-col text-right items-right">
                <div class="text-sm sm:text-base">Next Video →</div>
                <div class="text-xs sm:text-sm text-light">
                    <div>{nextVideo.title}</div>
                    <div>({videoIndex + 2} of {videos.length})</div>
                </div>
            </a>
        }
    </nav>
</CoursesLayout>
