---
import PageLayout from "@/layouts/Base.astro";
import data from '@/content/group.json';
import type { SiteMeta } from "@/types";
import { Image } from "astro:assets";
import Email from "@/components/Email.astro";
import type { AstroInstance, MarkdownInstance } from "astro";

export async function getMdContent({path}) {
  const customWebSites = import.meta.glob<MarkdownInstance>('@/content/custom/*.md', { eager: true });
  const foundCustom = Object.values(customWebSites).map(f => f.file.split('/').at(-1).includes(path) ? f.compiledContent() : "");
  return foundCustom;
}

export async function getAstroContent({path}) {
  const customWebSites = import.meta.glob<AstroInstance>('@/content/custom/*.astro', { eager: true });
  const foundCustom = Object.values(customWebSites).filter(f => f.file.split('/').at(-1).includes(path));
  return foundCustom;
}

export async function getStaticPaths() {
  return data.map(person => ({
    params: { path: person.path },
    props: { person }
  }));
}

const profilePhotoFolder = "/src/assets/profile_photos/";
const allImages = import.meta.glob<{ default: ImageMetadata }>("/src/assets/profile_photos/*.{jpg,png,webp,jpeg,gif}");
const defaultPhoto = 'profile-img.jpg';
const getImagePath = (photo) => {
  return photo ? allImages[profilePhotoFolder + photo]() : allImages[profilePhotoFolder + defaultPhoto]();
};

const { person } = Astro.props;
const { path } = Astro.params;

interface Props {
	meta: SiteMeta;
}

const meta = {
	title: person.name
};

const mdContent = await getMdContent({ path: path });
const astroContent = await getAstroContent({ path: path });
---

<PageLayout meta={meta}>
  <div class="flex flex-col sm:flex-row justify-center align-items-end mt-4 gap-8">
    <div class="justify-center text-center imgcircle">
      <Image src={getImagePath(person.photo)} alt="profile-photo" height="160" width="160"/>
    </div>
    <div class="flex flex-col gap-y-2">
      <h1>{person.name}</h1>
      <div><i>{person.active === "True" ? "current" : "last"} position:</i> <p>{person.position}</p></div>
      {person.email && <div><i>e-mail:</i> <p><Email email={person.email}/></p></div>}
    </div>
  </div>
  
{astroContent && astroContent.map(({ default: Component }) => (
    <div class="mt-6">
      <Component/>
    </div>
  ))}

{mdContent && 
  <div class="flex flex-col justify-center max-w-1/2 mt-6">
    <div set:html={mdContent} class="text-left"/>
  </div>
}
</PageLayout>

